"""
Module with setup functions for the application.
"""
import logging
import sys
import traceback

import flask
from flask import jsonify
from flask import make_response

from flask_log_request_id import RequestID
from flask_log_request_id import current_request_id
from PROJECT_NAME.logger.formatter import config_log
from PROJECT_NAME.routes.v1.healthcheck import healthcheck_routes


def after_all_response(response: flask.Response) -> flask.Response:
    """
    Setups the response object
    """
    response.headers["X-Request-ID"] = current_request_id()

    return response


def general_exception_handler(error: Exception) -> flask.Response:
    """
    Function to handle base exceptions generated by the application.
    """
    DEFAULT_500_MSG = (
        "Sorry, we messed something up. A team of highly trained monkeys "
        + "has been dispatched to solve the situation. If you see them, please "
        + f"show your request_id: {current_request_id()}"
    )

    # type, value, traceback
    tp, vl, tb = sys.exc_info()

    log_error = {
        "request_id": current_request_id(),
        "exception_type": str(tp),
        "message": str(vl),
        "traceback": str(traceback.format_tb(tb, 10)),
    }

    logging.error(log_error)

    final_msg = {"your_request_id": current_request_id(), "status": 500, "msg": DEFAULT_500_MSG}

    return make_response(jsonify(final_msg), 500)


def handler_404(error):
    return jsonify({"msg": "Sorry, the requested resource was not found!"}), 404


def handler_405(error):
    return jsonify({"msg": "Sorry, the request method is not allowed!"}), 405


def setup_blueprints(app: flask.Flask) -> None:
    """
    Adds blueprints to the flask application.
    """
    app.register_blueprint(healthcheck_routes)


def setup_app(app: flask.Flask) -> None:
    """
    Setups the main flask application.
    """
    app.register_error_handler(405, handler_405)
    app.register_error_handler(404, handler_404)
    app.register_error_handler(Exception, general_exception_handler)
    app.after_request(after_all_response)

    # no json keys sorting for the responses
    app.config["JSON_SORT_KEYS"] = False

    # sets request id for the flask app logging
    RequestID(app)

    # logging configuration of the app
    config_log()
